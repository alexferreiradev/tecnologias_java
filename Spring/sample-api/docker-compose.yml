# Este arquivo depende de vari√°veis de ambiente ou um arquivo .env criado, leia o README do projeto.

version: "3.9"
networks:
  db-net:
    external: false
    driver: "bridge"

volumes:
    db-data: {}

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: "0.0.1-SNAPSHOT"
      target: runnerComCache
    environment:
      DB_HOST: "db"
      MONGO_HOST: "nosql-db"
    ports:
      - "8082:8080"
    networks:
      - db-net
    depends_on:
      - db
      - nosql-db
    image: 'produto-api:${TAG:-latest}'
  db:
    image: debezium/postgres:14-alpine
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'sample-api'
    ports:
      - "5432:5432"
    command: ["postgres"]
    volumes:
      - ./db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres'" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - db-net
  nosql-db:
    image: mongo:5.0.17
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: sample-api
    ports:
      - "27017:27017"
    networks:
      - db-net
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - nosql-db
    ports:
      - "8081:8081"
    networks:
      - db-net
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo
      ME_CONFIG_MONGODB_SERVER: nosql-db

