# LOGS
logging.level.root=INFO
logging.level.dev.alexferreira.sampleapi.configuration=DEBUG
logging.level.dev.alexferreira.sampleapi.adapter=DEBUG
logging.level.dev.alexferreira.sampleapi.usecase=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.kafka=ERROR
logging.level.org.springframework.security=INFO
# desativa log de CONDITIONS EVALUATION REPORT
logging.level.org.springframework.boot.autoconfigure.logging=INFO
logging.level.org.hibernate=INFO

# DATABASE
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/sample_api
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USER:sample_api}
spring.datasource.password=${DB_PASS:sample_api}
spring.datasource.configuration.maximum-pool-size=10
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.data.jpa.repositories.bootstrap-mode=default
spring.data.jpa.repositories.enabled=true

# Mongo DB
spring.data.mongodb.uri=mongodb://root:${MONGO_PASS:sample_api}@${MONGO_HOST:localhost}:27017/sample_api?authSource=admin
spring.data.mongodb.database=sample_api
#spring.data.mongodb.database=sample_api
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.username=${MONGO_USER:root}
#spring.data.mongodb.password=${MONGO_PASS:sample_api}
#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.repositories.type=imperative


# Kafka
spring.kafka.security.protocol=${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29091}
spring.kafka.listener.concurrency=1
spring.kafka.listener.ack-mode=record
spring.kafka.listener.type=single
spring.kafka.consumer.group-id=sample-api
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.properties.max.poll.interval.ms=3600000
spring.kafka.consumer.properties.max.poll.records=10
spring.kafka.consumer.properties.session.timeout.ms=60000
spring.kafka.consumer.properties.heartbeat.interval.ms=5000
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries=5
spring.kafka.producer.acks=all
spring.kafka.producer.properties.max.block.ms=120000
spring.kafka.producer.properties.topics.inquilino=pub.inquilino-created

# Storage
storage.connection-string=${STORAGE_CONNECTION_STRING:DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;}
storage.container-name=${STORAGE_CONTAINER_NAME:sample-api}
